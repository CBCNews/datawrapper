{% extends "core.twig" %}

{% block content %}


    <div class="navbar navbar-editor navbar-fixed-top">
        <div class="navbar-inner">
            <div class="container" style="position:relative">
                 <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </a>

                <a class="brand">
                    {% trans "Chart Editor" %}
                </a>

                <div class="nav-collapse">
                    <ul class="nav dw-header-nav">
                        {% for step in steps %}
                            <li class="{% if createstep == step.index %} active{% else %}{% if createstep > step.index %} passed{% endif %}{% endif %}{% if chart.lastEditStep < step.index-2 %} disabled{% endif %}">
                                <a class="submit" href="{{ step.id }}" >
                                    <span class="step">{{ step.index }}</span>
                                    <span class="title">{{ step.title }}</span>
                                </a>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            </div>
        </div>
    </div>
<div class="spacer-editor"></div>

{% if user != chart.user and user.isAdmin() %}
<div class="alert alert-danger" style="text-align:center">
 {{ "<b>CAUTION!</b> This chart belongs to <a href='/admin/charts/%uid'>%email</a>. Great power comes with great responsibility, so be careful with what you're doing!" | trans
    | replace({"%email": chart.user.email, "%uid": chart.user.id }) | raw }}
</div>
{% endif %}

<script type="text/javascript">

    // initialize current chart
    var chart = dw.backend.currentChart = dw.chart(JSON.parse("{{ chart.toJSON | raw }}"));

    chart
        .locale('{{ chartLocale }}')
        .metricPrefix({{ metricPrefix | json | raw }});

    if (chart.get('lastEditStep') < {{ createstep }}) {
        dw.backend.__firstTime = true;
        chart.set('lastEditStep', {{ createstep }});
    }

dw.backend.ready(function() {

    dw.backend.syncChart(chart);

    _.templateSettings = {
        interpolate : /\{\{(.+?)\}\}/g
    };

    $('.chart-editor').on('click', '.submit', function(e) {
        var a = $(e.target);
        if (e.target.nodeName.toLowerCase() != 'a') a = a.parents('a');
        if (chart.hasUnsavedChanges()) {
            e.preventDefault();
            chart.onSave(function() {
                location.href = a.attr('href');
            });
        }
    });

    // update editor nav on hash change
    $(window).on('hashchange', onHashChange);

    onHashChange();

    function onHashChange() {
        if (location.hash) {
            var id = location.pathname.split('/')[3] + location.hash;
                $('.navbar-editor li a').each(function() {
                if ($(this).attr('href') == id) {
                    $('.navbar-editor li').removeClass('active');
                    $(this).parents('li').addClass('active');
                }
            });
        }
    }

});


</script>


{% endblock %}